openapi: 3.0.0
info:
  title: Emissions API
  description: >-
      Emissions APIâ€™s mission is to provide easy access to this data without
      the need of being an expert in satellite data analysis and without having
      to process terabytes of data.
  version: "0.1"
  contact:
    name: The Emissions API Developers
    url: https://emissions-api.org
    email: info@emissions-api.org
externalDocs:
  description: Source code documentation
  url: https://docs.emissions-api.org
paths:
  /api/v1/geo.json/:
    get:
      operationId: emissionsapi.web.get_data
      description: |
          Get all points in [GeoJSON](https://geojson.org/) format.
      parameters:
        - $ref: '#/components/parameters/geoframe'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/begin'
        - $ref: '#/components/parameters/end'
      responses:
        200:
          description: The Response contains all known points located within the specified rectangle contained in a GeoJSON feature collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/featurecollection'
        400:
          description: Parameter error

components:
  parameters:
    geoframe:
      in: query
      name: geoframe
      schema:
        type: string
      description: |
          `geoframe` will let you define your own rectangle from which the data is chosen.
          The Parameter must be in the form lo1,la1,lo2,la2 and represent the upper left and lower right corners of a rectangle.
      example: 15,45,20,40
    country:
      in: query
      name: country
      schema:
        type: string
      description: "`country` will use a preselected rectangle containing the specified country. Like 'DE'."
      example: DE
    begin:
      in: query
      name: begin
      schema:
        type: string
      description: "`begin` filter out points before this date. The date itself is included."
      example: 2019-09-10
    end:
      in: query
      name: end
      schema:
        type: string
      description: "`end` filter out points before this date. The date itself is not included."
      example: 2019-09-11


  schemas:
    featurecollection:
      description: GeoJSON Feature Collection
      externalDocs:
        description: RFC7946
        url: "https://tools.ietf.org/html/rfc7946#section-3.3"
      type: object
      example:
        features:
          - geometry:
              coordinates: [15.096772, 44.516739]
              type: Point
            properties:
              carbonmonixide: 0.0273975990712643
              timestamp: "2019-09-21T12:26:28.762000Z"
            type: Feature
          - geometry:
              coordinates: [15.063565, 44.561062]
              type: Point
            properties:
              carbonmonixide: 0.0273975990712643
              timestamp: "2019-09-21T12:26:27.922000Z"
            type: Feature
        type: FeatureCollection
