openapi: 3.0.0
info:
  title: Emissions API
  description: >-
      Emissions APIâ€™s mission is to provide easy access to this data without
      the need of being an expert in satellite data analysis and without having
      to process terabytes of data.
  version: "0.1"
  contact:
    name: The Emissions API Developers
    url: https://emissions-api.org
    email: info@emissions-api.org
externalDocs:
  description: Source code documentation
  url: https://docs.emissions-api.org
paths:
  /api/v1/geo.json/:
    get:
      operationId: emissionsapi.web.get_data
      description: |
          Get all points in [GeoJSON](https://geojson.org/) format.
      parameters:
        - $ref: '#/components/parameters/geoframe'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/begin'
        - $ref: '#/components/parameters/end'
      responses:
        200:
          description: The Response contains all known points located within the specified rectangle contained in a GeoJSON feature collection.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feature Collection'
        400:
          description: Parameter error
  /api/v1/average.json/:
    get:
      operationId: emissionsapi.web.get_average
      description: Get daily average for a specified area filtered by time.
      parameters:
        - $ref: '#/components/parameters/geoframe'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/begin'
        - $ref: '#/components/parameters/end'
      responses:
        200:
          description: Array of calculated averages.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Averages'
        400:
          description: Parameter error

components:
  parameters:
    geoframe:
      in: query
      name: geoframe
      schema:
        type: array
        items:
          type: number
        maxItems: 4
        minItems: 4
      description: |
          `geoframe` will let you define your own rectangle from which the data is chosen.
          The Parameter must be in the form lo1,la1,lo2,la2 and represent the upper left and lower right corners of a rectangle.
      example: [15, 45, 20, 40]
    country:
      in: query
      name: country
      schema:
        type: string
      description: "`country` will use a preselected rectangle containing the specified country. Like 'DE'."
      example: DE
    begin:
      in: query
      name: begin
      schema:
        type: string
      description: "`begin` filter out points before this date. The date itself is included."
      example: 2019-02-10
    end:
      in: query
      name: end
      schema:
        type: string
      description: "`end` filter out points before this date. The date itself is not included."
      example: 2019-02-11


  schemas:
    Feature Collection:
      description: Points as GeoJSON Feature Collection
      type: object
      properties:
        features:
          type: array
          items:
            type: object
            properties:
              type:  # This is the name of the key
                type: string
                example: FeatureCollection
              properties:  # This is the name of the key
                type: object
                properties:
                  carbonmonixide:
                    type: number
                    example: 0.0273975990712643
                  timestamp:
                    type: string
                    example: "2019-09-21T12:26:28.762000Z"
              geometry:
                type: object
                properties:
                  coordinates:
                    type: array
                    maxItems: 2
                    minItems: 2
                    items:
                      type: number
                    example: [15.096772, 44.516739]
                  type:  # This is the name of the key
                    type: string
                    example: "Point"
    Averages:
      type: array
      description: Array of average values.
      items:
        type: object
        properties:
          average:
            type: number
            example: 0.0312481193586528
          start:
            type: date-time
            example: 2019-02-10T13:05:08.812000Z
          end:
            type: date-time
            example: 2019-02-10T13:03:40.254000Z
